load pre-trained model :  /kaggle/working/WSL/exp10_softmax_model/fold-0.pth
_IncompatibleKeys(missing_keys=['bn0.weight', 'bn0.bias', 'bn0.running_mean', 'bn0.running_var', 'fc1.weight', 'fc1.bias', 'global_pool.p', 'head.weight', 'head.bias'], unexpected_keys=[])
#########################
#### Training
#### Fold: 1 | Image Size: (128, 1001) | Model: tf_efficientnet_b1_ns | Batch Size: 64 | Scheduler: cos
#### Num Train: 20,215 | Num Valid: 3,381





























































































































































100%|██████████| 316/316 [05:46<00:00,  1.10s/it]










100%|██████████| 27/27 [00:24<00:00,  1.08it/s]
Epoch: 1 | Train Loss: 3.423290764983696 | Val Loss: 0.6852653600551464 | Val Padded_cmAP : 0.4816773513412835
# Loading best model
# Infering OOF










 96%|█████████▋| 26/27 [00:21<00:00,  1.39it/s]
>>> FOLD 1 Primary_Padded_cmAP = 0.482
100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
/opt/conda/lib/python3.7/site-packages/pandas/core/frame.py:3678: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  self[col] = igetitem(value, i)
/opt/conda/lib/python3.7/site-packages/pandas/core/indexing.py:1667: SettingWithCopyWarning:
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead
See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self.obj[key] = value
















































































































wandb : 100%|██████████| 3250/3250 [03:43<00:00, 14.52it/s]
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/site-packages/IPython/core/interactiveshell.py", line 3552, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "/tmp/ipykernel_18373/3007975808.py", line 231, in <module>
    log_wandb(valid_df)
  File "/tmp/ipykernel_18373/2619424295.py", line 33, in log_wandb
    'table': wandb_table,
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 256, in wrapper
    return func(self, *args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 222, in wrapper
    return func(self, *args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 1543, in log
    self._log(data=data, step=step, commit=commit)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 1334, in _log
    self._partial_history_callback(data, step, commit)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 1228, in _partial_history_callback
    publish_step=not_using_tensorboard,
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 541, in publish_partial_history
    data = history_dict_to_json(run, data, step=user_step, ignore_copy_err=True)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/data_types/utils.py", line 55, in history_dict_to_json
    run, key, val, namespace=step, ignore_copy_err=ignore_copy_err
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/data_types/utils.py", line 154, in val_to_json
    art.add(val, key)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_artifacts.py", line 508, in add
    val = obj.to_json(self)
  File "/opt/conda/lib/python3.7/site-packages/wandb/data_types.py", line 680, in to_json
    mapped_row.append(_json_helper(v, artifact))
  File "/opt/conda/lib/python3.7/site-packages/wandb/data_types.py", line 107, in _json_helper
    return val.to_json(artifact)
  File "/opt/conda/lib/python3.7/site-packages/wandb/data_types.py", line 1098, in to_json
    json_dict = super().to_json(run)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/data_types/base_types/media.py", line 240, in to_json
    self._path, name=name, is_tmp=self._is_tmp
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_artifacts.py", line 392, in add_file
    return self._add_local_file(name, local_path, digest=digest)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_artifacts.py", line 705, in _add_local_file
    shutil.copyfile(path, f.name)
  File "/opt/conda/lib/python3.7/shutil.py", line 122, in copyfile
    copyfileobj(fsrc, fdst)
  File "/opt/conda/lib/python3.7/shutil.py", line 79, in copyfileobj
    buf = fsrc.read(length)
KeyboardInterrupt
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/site-packages/IPython/core/interactiveshell.py", line 2098, in showtraceback
    stb = value._render_traceback_()
AttributeError: 'KeyboardInterrupt' object has no attribute '_render_traceback_'
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/site-packages/IPython/core/ultratb.py", line 1101, in get_records
    return _fixed_getinnerframes(etb, number_of_lines_of_context, tb_offset)
  File "/opt/conda/lib/python3.7/site-packages/IPython/core/ultratb.py", line 248, in wrapped
    return f(*args, **kwargs)
  File "/opt/conda/lib/python3.7/site-packages/IPython/core/ultratb.py", line 281, in _fixed_getinnerframes
    records = fix_frame_records_filenames(inspect.getinnerframes(etb, context))
  File "/opt/conda/lib/python3.7/inspect.py", line 1502, in getinnerframes
    frameinfo = (tb.tb_frame,) + getframeinfo(tb, context)
  File "/opt/conda/lib/python3.7/inspect.py", line 1460, in getframeinfo
    filename = getsourcefile(frame) or getfile(frame)
  File "/opt/conda/lib/python3.7/inspect.py", line 696, in getsourcefile
    if getattr(getmodule(object, filename), '__loader__', None) is not None:
  File "/opt/conda/lib/python3.7/inspect.py", line 739, in getmodule
    f = getabsfile(module)
  File "/opt/conda/lib/python3.7/inspect.py", line 708, in getabsfile
    _filename = getsourcefile(object) or getfile(object)
  File "/opt/conda/lib/python3.7/inspect.py", line 693, in getsourcefile
    if os.path.exists(filename):
  File "/opt/conda/lib/python3.7/genericpath.py", line 19, in exists
    os.stat(path)
KeyboardInterrupt
Exception in thread ChkStopThr:
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/threading.py", line 926, in _bootstrap_inner
    self.run()
  File "/opt/conda/lib/python3.7/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 170, in check_status
    status_response = self._interface.communicate_stop_status()
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 127, in communicate_stop_status
    resp = self._communicate_stop_status(status)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 395, in _communicate_stop_status
    resp = self._communicate(req, local=True)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 231, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
Exception: The wandb backend process has shutdown
Exception in thread NetStatThr:
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/threading.py", line 926, in _bootstrap_inner
    self.run()
  File "/opt/conda/lib/python3.7/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 152, in check_network_status
    status_response = self._interface.communicate_network_status()
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 138, in communicate_network_status
    resp = self._communicate_network_status(status)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 405, in _communicate_network_status
    resp = self._communicate(req, local=True)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 231, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
