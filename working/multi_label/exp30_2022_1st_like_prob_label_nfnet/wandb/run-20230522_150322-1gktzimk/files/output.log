#########################
#### Training
#### Fold: 3 | Image Size: (128, 1001) | Model: hf_hub:timm/eca_nfnet_l0 | Batch Size: 64 | Scheduler: cos
#### Num Train: 20,217 | Num Valid: 3,381





































































































































































100%|██████████| 316/316 [05:40<00:00,  1.08s/it]























 96%|█████████▋| 26/27 [00:49<00:01,  1.80s/it]
100%|██████████| 27/27 [00:50<00:00,  1.87s/it]




































































































































































100%|██████████| 316/316 [05:38<00:00,  1.07s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
Epoch: 2 | Train Loss: 6.702468182467207 | Val Loss: 4.730599836066917 | Val Padded_cmAP : 0.587165479330107









































































































































































100%|██████████| 316/316 [05:49<00:00,  1.10s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
Epoch: 3 | Train Loss: 5.589119954199731 | Val Loss: 3.5105583756058305 | Val Padded_cmAP : 0.716169340438338







































































































































































100%|██████████| 316/316 [05:51<00:00,  1.11s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
Epoch: 4 | Train Loss: 4.850941286811346 | Val Loss: 3.093954730916906 | Val Padded_cmAP : 0.7598022479366638



































































































































































100%|██████████| 316/316 [05:36<00:00,  1.06s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
Epoch: 5 | Train Loss: 4.391990814027907 | Val Loss: 2.776873487013358 | Val Padded_cmAP : 0.7851551976614197



































































































































































100%|██████████| 316/316 [05:32<00:00,  1.05s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]






































































































































































100%|██████████| 316/316 [05:42<00:00,  1.09s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]







































































































































































100%|██████████| 316/316 [05:39<00:00,  1.07s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]



































































































































































100%|██████████| 316/316 [05:37<00:00,  1.07s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]













































































































































































100%|██████████| 316/316 [05:51<00:00,  1.11s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
Epoch: 10 | Train Loss: 3.3057537908795513 | Val Loss: 2.2533943476500333 | Val Padded_cmAP : 0.8393956121429167









































































































































































100%|██████████| 316/316 [05:45<00:00,  1.09s/it]

























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
Epoch: 11 | Train Loss: 3.170482818838916 | Val Loss: 2.1833668020036487 | Val Padded_cmAP : 0.8450104984786595






































































































































































100%|██████████| 316/316 [05:42<00:00,  1.08s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]










































































































































































100%|██████████| 316/316 [05:51<00:00,  1.11s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
Epoch: 13 | Train Loss: 3.0408751277983943 | Val Loss: 2.0637290058312594 | Val Padded_cmAP : 0.8514219255539482








































































































































































100%|██████████| 316/316 [05:43<00:00,  1.09s/it]























 96%|█████████▋| 26/27 [00:49<00:01,  1.81s/it]
100%|██████████| 27/27 [00:50<00:00,  1.87s/it]





































































































































































100%|██████████| 316/316 [05:41<00:00,  1.08s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
Epoch: 15 | Train Loss: 2.8786991027337088 | Val Loss: 2.0719372122376054 | Val Padded_cmAP : 0.8543394298202862





































































































































































100%|██████████| 316/316 [05:40<00:00,  1.08s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
Epoch: 16 | Train Loss: 2.8155010916009733 | Val Loss: 2.0427025931852834 | Val Padded_cmAP : 0.8578717334832265






































































































































































100%|██████████| 316/316 [05:38<00:00,  1.07s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
Epoch: 17 | Train Loss: 2.764826165724404 | Val Loss: 1.9627574019961886 | Val Padded_cmAP : 0.862765208695814



































































































































































100%|██████████| 316/316 [05:35<00:00,  1.06s/it]























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]



































































































































































100%|██████████| 316/316 [05:35<00:00,  1.06s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]
































































































































































100%|██████████| 316/316 [05:33<00:00,  1.05s/it]























100%|██████████| 27/27 [00:50<00:00,  1.44s/it]
100%|██████████| 27/27 [00:50<00:00,  1.86s/it]








































































































































































100%|██████████| 316/316 [05:44<00:00,  1.09s/it]























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]









































































































































































100%|██████████| 316/316 [05:46<00:00,  1.10s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
Epoch: 22 | Train Loss: 2.5512788454188575 | Val Loss: 1.901675111717648 | Val Padded_cmAP : 0.8737378077237236


































































































































































100%|██████████| 316/316 [05:29<00:00,  1.04s/it]























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]


































































































































































100%|██████████| 316/316 [05:34<00:00,  1.06s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
Epoch: 24 | Train Loss: 2.459197902981239 | Val Loss: 1.9368326156227678 | Val Padded_cmAP : 0.8772385934540028




































































































































































100%|██████████| 316/316 [05:38<00:00,  1.07s/it]























100%|██████████| 27/27 [00:50<00:00,  1.43s/it]
100%|██████████| 27/27 [00:50<00:00,  1.86s/it]

































































































































































100%|██████████| 316/316 [05:31<00:00,  1.05s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]


































































































































































100%|██████████| 316/316 [05:32<00:00,  1.05s/it]























100%|██████████| 27/27 [00:50<00:00,  1.44s/it]
100%|██████████| 27/27 [00:50<00:00,  1.87s/it]







































































































































































100%|██████████| 316/316 [05:42<00:00,  1.09s/it]























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]



































































































































































100%|██████████| 316/316 [05:34<00:00,  1.06s/it]























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]




































































































































































100%|██████████| 316/316 [05:33<00:00,  1.05s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
Epoch: 30 | Train Loss: 2.2348194039320646 | Val Loss: 1.8140614606716015 | Val Padded_cmAP : 0.8842813736516423


































































































































































100%|██████████| 316/316 [05:33<00:00,  1.06s/it]























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]
































































































































































100%|██████████| 316/316 [05:27<00:00,  1.04s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
Epoch: 32 | Train Loss: 2.1253118198129197 | Val Loss: 1.7505367420337818 | Val Padded_cmAP : 0.8886542701014327








































































































































































100%|██████████| 316/316 [05:40<00:00,  1.08s/it]























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]







































































































































































100%|██████████| 316/316 [05:42<00:00,  1.09s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]






































































































































































100%|██████████| 316/316 [05:37<00:00,  1.07s/it]























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]










































































































































































100%|██████████| 316/316 [05:49<00:00,  1.11s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
Epoch: 36 | Train Loss: 2.045552958793278 | Val Loss: 1.7858468205840499 | Val Padded_cmAP : 0.8887873626995189







































































































































































100%|██████████| 316/316 [05:46<00:00,  1.10s/it]























 93%|█████████▎| 25/27 [00:47<00:03,  1.80s/it]
100%|██████████| 27/27 [00:50<00:00,  1.87s/it]





































































































































































100%|██████████| 316/316 [05:42<00:00,  1.08s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]




































































































































































100%|██████████| 316/316 [05:40<00:00,  1.08s/it]























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]









































































































































































100%|██████████| 316/316 [05:51<00:00,  1.11s/it]























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]







































































































































































100%|██████████| 316/316 [05:48<00:00,  1.10s/it]























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]













































































































































































100%|██████████| 316/316 [05:55<00:00,  1.12s/it]























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]








































































































































































100%|██████████| 316/316 [05:42<00:00,  1.08s/it]























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
  0%|          | 0/316 [00:00<?, ?it/s]





































































































































































100%|██████████| 316/316 [05:42<00:00,  1.08s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]








































































































































































100%|██████████| 316/316 [05:47<00:00,  1.10s/it]























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
  0%|          | 0/316 [00:00<?, ?it/s]










































































































































































100%|██████████| 316/316 [05:55<00:00,  1.13s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
Epoch: 46 | Train Loss: 1.8034002735644956 | Val Loss: 1.75469481282764 | Val Padded_cmAP : 0.8978102403591433

















































































































































































100%|██████████| 316/316 [06:04<00:00,  1.15s/it]
























 96%|█████████▋| 26/27 [00:49<00:01,  1.79s/it]
100%|██████████| 27/27 [00:50<00:00,  1.86s/it]













































































































































































100%|██████████| 316/316 [06:03<00:00,  1.15s/it]























 93%|█████████▎| 25/27 [00:47<00:03,  1.81s/it]
100%|██████████| 27/27 [00:50<00:00,  1.87s/it]


















































































































































































100%|██████████| 316/316 [06:19<00:00,  1.20s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.87s/it]
Epoch: 49 | Train Loss: 1.765589011243627 | Val Loss: 1.732682282174075 | Val Padded_cmAP : 0.8993093883108403












































































































































































100%|██████████| 316/316 [06:03<00:00,  1.15s/it]
























100%|██████████| 27/27 [00:50<00:00,  1.86s/it]
Epoch: 50 | Train Loss: 1.759641646584378 | Val Loss: 1.6930714393103565 | Val Padded_cmAP : 0.8997281129019178
# Loading best model
  0%|          | 0/27 [00:00<?, ?it/s]
  4%|▎         | 1/27 [00:04<01:48,  4.17s/it]
  7%|▋         | 2/27 [00:05<01:09,  2.78s/it]
 11%|█         | 3/27 [00:07<00:55,  2.33s/it]
 15%|█▍        | 4/27 [00:09<00:48,  2.11s/it]
 19%|█▊        | 5/27 [00:11<00:43,  2.00s/it]
 22%|██▏       | 6/27 [00:13<00:40,  1.93s/it]
 26%|██▌       | 7/27 [00:14<00:37,  1.89s/it]
 30%|██▉       | 8/27 [00:16<00:35,  1.86s/it]
 37%|███▋      | 10/27 [00:20<00:31,  1.84s/it]
 41%|████      | 11/27 [00:22<00:29,  1.83s/it]
 44%|████▍     | 12/27 [00:23<00:27,  1.82s/it]
 48%|████▊     | 13/27 [00:25<00:25,  1.82s/it]
 52%|█████▏    | 14/27 [00:27<00:23,  1.82s/it]
 56%|█████▌    | 15/27 [00:29<00:21,  1.82s/it]
 59%|█████▉    | 16/27 [00:31<00:19,  1.81s/it]
 63%|██████▎   | 17/27 [00:33<00:18,  1.81s/it]
 67%|██████▋   | 18/27 [00:34<00:16,  1.82s/it]
 70%|███████   | 19/27 [00:36<00:14,  1.81s/it]
 78%|███████▊  | 21/27 [00:40<00:10,  1.80s/it]
 81%|████████▏ | 22/27 [00:42<00:09,  1.80s/it]
 85%|████████▌ | 23/27 [00:43<00:07,  1.80s/it]
 89%|████████▉ | 24/27 [00:45<00:05,  1.80s/it]
 93%|█████████▎| 25/27 [00:47<00:03,  1.80s/it]
  self[col] = igetitem(value, i)ckages/pandas/core/frame.py:3678: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
  self[col] = igetitem(value, i)ckages/pandas/core/frame.py:3678: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
>>> FOLD 3 Primary_Padded_cmAP = 0.900
wandb :   4%|▍         | 26/663 [00:01<00:36, 17.28it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :   8%|▊         | 56/663 [00:03<00:35, 17.32it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  13%|█▎        | 87/663 [00:05<00:30, 18.90it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  18%|█▊        | 118/663 [00:07<00:39, 13.91it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  24%|██▍       | 159/663 [00:09<00:24, 20.31it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  26%|██▋       | 175/663 [00:11<00:38, 12.77it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  30%|███       | 201/663 [00:13<00:20, 22.11it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  36%|███▌      | 236/663 [00:15<00:24, 17.66it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  41%|████      | 270/663 [00:17<00:23, 16.72it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  47%|████▋     | 312/663 [00:19<00:15, 23.09it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  51%|█████     | 338/663 [00:21<00:28, 11.42it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  56%|█████▌    | 369/663 [00:23<00:16, 17.93it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  60%|██████    | 398/663 [00:25<00:19, 13.52it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  66%|██████▌   | 437/663 [00:27<00:13, 16.89it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  71%|███████▏  | 474/663 [00:29<00:09, 19.94it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  77%|███████▋  | 510/663 [00:31<00:08, 17.14it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  84%|████████▎ | 555/663 [00:33<00:04, 24.14it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  86%|████████▌ | 567/663 [00:35<00:13,  7.10it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  91%|█████████▏| 605/663 [00:37<00:02, 21.09it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  94%|█████████▍| 626/663 [00:39<00:04,  9.04it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  99%|█████████▊| 654/663 [00:41<00:00, 15.47it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb : 100%|██████████| 663/663 [00:41<00:00, 15.79it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb : 100%|██████████| 663/663 [00:41<00:00, 15.79it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`