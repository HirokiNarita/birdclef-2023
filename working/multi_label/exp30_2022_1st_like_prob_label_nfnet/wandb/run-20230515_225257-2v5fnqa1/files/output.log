
load pre-trained model :  /kaggle/working/WSL/exp10_softmax_model/fold-2.pth
  0%|          | 0/307 [00:00<?, ?it/s]
_IncompatibleKeys(missing_keys=['bn0.weight', 'bn0.bias', 'bn0.running_mean', 'bn0.running_var', 'fc1.weight', 'fc1.bias', 'global_pool.p', 'head.weight', 'head.bias'], unexpected_keys=[])
#########################
#### Training
#### Fold: 3 | Image Size: (128, 1001) | Model: tf_efficientnet_b1_ns | Batch Size: 64 | Scheduler: cos





































































































































100%|██████████| 307/307 [04:43<00:00,  1.08it/s]









 93%|█████████▎| 25/27 [00:20<00:01,  1.40it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
































































































































100%|██████████| 307/307 [04:22<00:00,  1.17it/s]









 93%|█████████▎| 25/27 [00:20<00:01,  1.40it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]

































































































































100%|██████████| 307/307 [04:25<00:00,  1.16it/s]










 96%|█████████▋| 26/27 [00:21<00:00,  1.40it/s]
100%|██████████| 27/27 [00:21<00:00,  1.24it/s]

































































































































100%|██████████| 307/307 [04:27<00:00,  1.15it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 4 | Train Loss: 3.921778834215593 | Val Loss: 2.4804402545646385 | Val Padded_cmAP : 0.8071873652483982





































































































































100%|██████████| 307/307 [04:30<00:00,  1.13it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]





























































































































100%|██████████| 307/307 [04:17<00:00,  1.19it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]































































































































100%|██████████| 307/307 [04:20<00:00,  1.18it/s]










100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
Epoch: 7 | Train Loss: 2.9076096312619186 | Val Loss: 2.268767409854465 | Val Padded_cmAP : 0.8435299988581206



































































































































100%|██████████| 307/307 [04:26<00:00,  1.15it/s]










 96%|█████████▋| 26/27 [00:21<00:00,  1.38it/s]
100%|██████████| 27/27 [00:21<00:00,  1.24it/s]

































































































































100%|██████████| 307/307 [04:25<00:00,  1.15it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]





































































































































100%|██████████| 307/307 [04:33<00:00,  1.12it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]





































































































































100%|██████████| 307/307 [04:32<00:00,  1.13it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]




































































































































100%|██████████| 307/307 [04:31<00:00,  1.13it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 12 | Train Loss: 2.3275335118514318 | Val Loss: 2.058404666406137 | Val Padded_cmAP : 0.8591894804371331








































































































































100%|██████████| 307/307 [04:40<00:00,  1.09it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]




































































































































100%|██████████| 307/307 [04:31<00:00,  1.13it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]







































































































































100%|██████████| 307/307 [04:37<00:00,  1.11it/s]









 93%|█████████▎| 25/27 [00:20<00:01,  1.40it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]






































































































































100%|██████████| 307/307 [04:39<00:00,  1.10it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 16 | Train Loss: 2.1051193502904537 | Val Loss: 2.049132068951925 | Val Padded_cmAP : 0.8690551110125444




































































































































100%|██████████| 307/307 [04:32<00:00,  1.12it/s]









 93%|█████████▎| 25/27 [00:20<00:01,  1.40it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]









































































































































100%|██████████| 307/307 [04:42<00:00,  1.08it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 18 | Train Loss: 2.01014097039785 | Val Loss: 1.975245107103277 | Val Padded_cmAP : 0.8707298555157272











































































































































100%|██████████| 307/307 [04:48<00:00,  1.06it/s]










100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]













































































































































100%|██████████| 307/307 [04:56<00:00,  1.04it/s]









 89%|████████▉ | 24/27 [00:19<00:02,  1.41it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]











































































































































100%|██████████| 307/307 [04:51<00:00,  1.05it/s]










 96%|█████████▋| 26/27 [00:21<00:00,  1.41it/s]
100%|██████████| 27/27 [00:21<00:00,  1.23it/s]















































































































































100%|██████████| 307/307 [04:57<00:00,  1.03it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 22 | Train Loss: 1.9034869065113875 | Val Loss: 1.9548032614919875 | Val Padded_cmAP : 0.8745644770323067

















































































































































100%|██████████| 307/307 [05:00<00:00,  1.02it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]
















































































































































100%|██████████| 307/307 [04:59<00:00,  1.02it/s]










100%|██████████| 27/27 [00:21<00:00,  1.69it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]




















































































































































100%|██████████| 307/307 [05:08<00:00,  1.01s/it]










 96%|█████████▋| 26/27 [00:21<00:00,  1.40it/s]
100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
















































































































































100%|██████████| 307/307 [05:00<00:00,  1.02it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]


















































































































































100%|██████████| 307/307 [05:06<00:00,  1.00it/s]









100%|██████████| 27/27 [00:21<00:00,  1.23it/s]
  0%|          | 0/307 [00:00<?, ?it/s]































































































































































100%|██████████| 307/307 [06:03<00:00,  1.19s/it]










100%|██████████| 27/27 [00:22<00:00,  1.21it/s]
  0%|          | 0/307 [00:00<?, ?it/s]








































































































































































100%|██████████| 307/307 [06:24<00:00,  1.25s/it]










100%|██████████| 27/27 [00:21<00:00,  1.23it/s]
Epoch: 29 | Train Loss: 1.6679042686468615 | Val Loss: 1.8157477180163066 | Val Padded_cmAP : 0.8804984034873614


























































































































































100%|██████████| 307/307 [05:46<00:00,  1.13s/it]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]






















































































































































100%|██████████| 307/307 [05:29<00:00,  1.07s/it]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]
























































































































































100%|██████████| 307/307 [05:40<00:00,  1.11s/it]










100%|██████████| 27/27 [00:21<00:00,  1.26it/s]
  0%|          | 0/307 [00:00<?, ?it/s]



























































































































































100%|██████████| 307/307 [05:32<00:00,  1.08s/it]









 93%|█████████▎| 25/27 [00:20<00:01,  1.41it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]




























































































































































100%|██████████| 307/307 [06:03<00:00,  1.18s/it]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 34 | Train Loss: 1.5677200924690073 | Val Loss: 1.7804767489433289 | Val Padded_cmAP : 0.8852770048156805






























































































































































100%|██████████| 307/307 [06:05<00:00,  1.19s/it]










 96%|█████████▋| 26/27 [00:21<00:00,  1.42it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]

































































































































































100%|██████████| 307/307 [06:02<00:00,  1.18s/it]










100%|██████████| 27/27 [00:21<00:00,  1.70it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]






























































































































































100%|██████████| 307/307 [06:05<00:00,  1.19s/it]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 37 | Train Loss: 1.5265644901350188 | Val Loss: 1.836592298966867 | Val Padded_cmAP : 0.8862545052743513
































































































































































100%|██████████| 307/307 [06:11<00:00,  1.21s/it]










100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
Epoch: 38 | Train Loss: 1.4922448194764724 | Val Loss: 1.864493441802484 | Val Padded_cmAP : 0.8868809664312121
































































































































































100%|██████████| 307/307 [06:01<00:00,  1.18s/it]










100%|██████████| 27/27 [00:21<00:00,  1.26it/s]
  0%|          | 0/307 [00:00<?, ?it/s]





































































































































































100%|██████████| 307/307 [05:55<00:00,  1.16s/it]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]






























































































































































100%|██████████| 307/307 [05:43<00:00,  1.12s/it]










100%|██████████| 27/27 [00:21<00:00,  1.26it/s]
Epoch: 41 | Train Loss: 1.4674025987569206 | Val Loss: 1.6432739363776312 | Val Padded_cmAP : 0.8913155386693338






















































































































































100%|██████████| 307/307 [05:32<00:00,  1.08s/it]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]




























































































































































100%|██████████| 307/307 [05:41<00:00,  1.11s/it]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 43 | Train Loss: 1.4581181160401833 | Val Loss: 1.7687707002516146 | Val Padded_cmAP : 0.8902165370051373

























































































































































100%|██████████| 307/307 [05:42<00:00,  1.12s/it]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]




























































































































































100%|██████████| 307/307 [05:46<00:00,  1.13s/it]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]
































































































































































100%|██████████| 307/307 [05:54<00:00,  1.15s/it]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]


























































































































































100%|██████████| 307/307 [05:52<00:00,  1.15s/it]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]































































































































































100%|██████████| 307/307 [05:45<00:00,  1.13s/it]









 93%|█████████▎| 25/27 [00:20<00:01,  1.41it/s]
100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
























































































































































100%|██████████| 307/307 [05:53<00:00,  1.15s/it]










 93%|█████████▎| 25/27 [00:20<00:01,  1.40it/s]
100%|██████████| 27/27 [00:21<00:00,  1.24it/s]



























































































































































100%|██████████| 307/307 [05:41<00:00,  1.11s/it]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 50 | Train Loss: 1.3903680404933345 | Val Loss: 1.6338637879601232 | Val Padded_cmAP : 0.8940473424635242
# Loading best model
# Infering OOF
 11%|█         | 3/27 [00:03<00:24,  1.03s/it]
 22%|██▏       | 6/27 [00:05<00:16,  1.25it/s]
 30%|██▉       | 8/27 [00:07<00:14,  1.33it/s]
 41%|████      | 11/27 [00:09<00:11,  1.38it/s]
 52%|█████▏    | 14/27 [00:11<00:09,  1.38it/s]
 63%|██████▎   | 17/27 [00:13<00:07,  1.40it/s]
 74%|███████▍  | 20/27 [00:15<00:04,  1.41it/s]
 85%|████████▌ | 23/27 [00:17<00:02,  1.41it/s]
 93%|█████████▎| 25/27 [00:19<00:01,  1.41it/s]
 93%|█████████▎| 25/27 [00:19<00:01,  1.41it/s]
>>> FOLD 3 Primary_Padded_cmAP = 0.894
wandb :   2%|▏         | 11/669 [00:00<00:34, 19.18it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :   7%|▋         | 46/669 [00:02<00:32, 19.41it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  13%|█▎        | 89/669 [00:04<00:24, 23.63it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  19%|█▊        | 124/669 [00:06<00:26, 20.69it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  24%|██▎       | 158/669 [00:07<00:17, 29.57it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  27%|██▋       | 183/669 [00:10<00:58,  8.26it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  33%|███▎      | 220/669 [00:12<00:25, 17.92it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  39%|███▉      | 262/669 [00:14<00:19, 21.08it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  46%|████▌     | 305/669 [00:16<00:14, 25.76it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  48%|████▊     | 324/669 [00:18<00:37,  9.12it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  53%|█████▎    | 352/669 [00:20<00:19, 16.16it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  56%|█████▌    | 374/669 [00:22<00:24, 12.23it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  62%|██████▏   | 413/669 [00:24<00:10, 23.29it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  67%|██████▋   | 451/669 [00:26<00:11, 18.58it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  73%|███████▎  | 486/669 [00:28<00:09, 19.01it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  79%|███████▉  | 531/669 [00:30<00:05, 23.64it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  84%|████████▍ | 563/669 [00:32<00:09, 11.21it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  87%|████████▋ | 585/669 [00:34<00:05, 15.82it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  93%|█████████▎| 619/669 [00:36<00:03, 15.39it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  95%|█████████▌| 638/669 [00:38<00:04,  7.44it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb : 100%|██████████| 669/669 [00:40<00:00, 16.57it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb : 100%|██████████| 669/669 [00:40<00:00, 16.57it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`