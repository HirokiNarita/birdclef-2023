load pre-trained model :  /kaggle/working/WSL/exp10_softmax_model/fold-4.pth
_IncompatibleKeys(missing_keys=['bn0.weight', 'bn0.bias', 'bn0.running_mean', 'bn0.running_var', 'fc1.weight', 'fc1.bias', 'global_pool.p', 'head.weight', 'head.bias'], unexpected_keys=[])
  0%|          | 0/307 [00:00<?, ?it/s]
#########################
#### Training
#### Fold: 5 | Image Size: (128, 1001) | Model: tf_efficientnet_b1_ns | Batch Size: 64 | Scheduler: cos










































































































































100%|██████████| 307/307 [04:56<00:00,  1.04it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 1 | Train Loss: 17.980695831659173 | Val Loss: 6.1554087709497525 | Val Padded_cmAP : 0.48179077553384964









































































































































100%|██████████| 307/307 [04:45<00:00,  1.08it/s]









 93%|█████████▎| 25/27 [00:20<00:01,  1.40it/s]
100%|██████████| 27/27 [00:21<00:00,  1.24it/s]








































































































































100%|██████████| 307/307 [04:47<00:00,  1.07it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 3 | Train Loss: 4.943032718248398 | Val Loss: 2.98813381018462 | Val Padded_cmAP : 0.7440284654431123










































































































































100%|██████████| 307/307 [04:45<00:00,  1.07it/s]










100%|██████████| 27/27 [00:21<00:00,  1.70it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]










































































































































100%|██████████| 307/307 [04:46<00:00,  1.07it/s]










 96%|█████████▋| 26/27 [00:21<00:00,  1.41it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]









































































































































100%|██████████| 307/307 [04:48<00:00,  1.06it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 6 | Train Loss: 3.1950547780586764 | Val Loss: 2.2191910567107023 | Val Padded_cmAP : 0.8353995244165646












































































































































100%|██████████| 307/307 [04:45<00:00,  1.07it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 7 | Train Loss: 2.8964403964797527 | Val Loss: 2.0119916046107256 | Val Padded_cmAP : 0.8497491247514333









































































































































100%|██████████| 307/307 [04:44<00:00,  1.08it/s]










100%|██████████| 27/27 [00:21<00:00,  1.69it/s]
100%|██████████| 27/27 [00:21<00:00,  1.24it/s]















































































































































100%|██████████| 307/307 [04:53<00:00,  1.05it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 9 | Train Loss: 2.5791446510277662 | Val Loss: 1.9980221368648388 | Val Padded_cmAP : 0.8601796808807745












































































































































100%|██████████| 307/307 [04:48<00:00,  1.06it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]













































































































































100%|██████████| 307/307 [04:54<00:00,  1.04it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]












































































































































100%|██████████| 307/307 [04:53<00:00,  1.05it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]












































































































































100%|██████████| 307/307 [04:53<00:00,  1.05it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]















































































































































100%|██████████| 307/307 [05:00<00:00,  1.02it/s]










100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]
















































































































































100%|██████████| 307/307 [04:55<00:00,  1.04it/s]










100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]














































































































































100%|██████████| 307/307 [04:54<00:00,  1.04it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]















































































































































100%|██████████| 307/307 [05:00<00:00,  1.02it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]


















































































































































100%|██████████| 307/307 [05:00<00:00,  1.02it/s]









 89%|████████▉ | 24/27 [00:19<00:02,  1.41it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]














































































































































100%|██████████| 307/307 [04:54<00:00,  1.04it/s]










100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
Epoch: 19 | Train Loss: 1.9774383368631916 | Val Loss: 1.8514201199566875 | Val Padded_cmAP : 0.871544627358652





















































































































































100%|██████████| 307/307 [05:06<00:00,  1.00it/s]










100%|██████████| 27/27 [00:21<00:00,  1.70it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]













































































































































100%|██████████| 307/307 [04:55<00:00,  1.04it/s]










 96%|█████████▋| 26/27 [00:21<00:00,  1.41it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]













































































































































100%|██████████| 307/307 [04:55<00:00,  1.04it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 22 | Train Loss: 1.891191452644547 | Val Loss: 1.8366103525514956 | Val Padded_cmAP : 0.8793962100987004
















































































































































100%|██████████| 307/307 [04:55<00:00,  1.04it/s]









100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]














































































































































100%|██████████| 307/307 [05:04<00:00,  1.01it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]














































































































































100%|██████████| 307/307 [04:54<00:00,  1.04it/s]










100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]















































































































































100%|██████████| 307/307 [04:54<00:00,  1.04it/s]









100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]













































































































































100%|██████████| 307/307 [04:52<00:00,  1.05it/s]









100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]















































































































































100%|██████████| 307/307 [04:56<00:00,  1.04it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 28 | Train Loss: 1.7231755155693824 | Val Loss: 1.780094199710422 | Val Padded_cmAP : 0.883794103379668












































































































































100%|██████████| 307/307 [04:53<00:00,  1.05it/s]









 93%|█████████▎| 25/27 [00:20<00:01,  1.41it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
















































































































































100%|██████████| 307/307 [04:59<00:00,  1.03it/s]










 96%|█████████▋| 26/27 [00:21<00:00,  1.40it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]















































































































































100%|██████████| 307/307 [04:52<00:00,  1.05it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 31 | Train Loss: 1.6349067245321864 | Val Loss: 1.8378222915861342 | Val Padded_cmAP : 0.8831949229803353
















































































































































100%|██████████| 307/307 [04:54<00:00,  1.04it/s]









100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]













































































































































100%|██████████| 307/307 [04:59<00:00,  1.02it/s]









 93%|█████████▎| 25/27 [00:20<00:01,  1.41it/s]
100%|██████████| 27/27 [00:21<00:00,  1.24it/s]


















































































































































100%|██████████| 307/307 [05:04<00:00,  1.01it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]
















































































































































100%|██████████| 307/307 [05:10<00:00,  1.01s/it]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]



















































































































































100%|██████████| 307/307 [05:06<00:00,  1.00it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 36 | Train Loss: 1.5522713692258157 | Val Loss: 1.7671083465770439 | Val Padded_cmAP : 0.8868849381343222

















































































































































100%|██████████| 307/307 [05:07<00:00,  1.00s/it]










100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
Epoch: 37 | Train Loss: 1.5092057040149303 | Val Loss: 1.7318119252169575 | Val Padded_cmAP : 0.8892446194444149



















































































































































100%|██████████| 307/307 [05:09<00:00,  1.01s/it]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]

















































































































































100%|██████████| 307/307 [05:11<00:00,  1.01s/it]









100%|██████████| 27/27 [00:21<00:00,  1.26it/s]
  0%|          | 0/307 [00:00<?, ?it/s]
















































































































































100%|██████████| 307/307 [04:59<00:00,  1.03it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]




















































































































































100%|██████████| 307/307 [05:03<00:00,  1.01it/s]









100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]
















































































































































100%|██████████| 307/307 [04:58<00:00,  1.03it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 42 | Train Loss: 1.4404859804951795 | Val Loss: 1.7208880771089483 | Val Padded_cmAP : 0.8916628489081848











































































































































100%|██████████| 307/307 [04:54<00:00,  1.04it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 43 | Train Loss: 1.4558775661822638 | Val Loss: 1.7200076999487701 | Val Padded_cmAP : 0.8909096999602873









































































































































100%|██████████| 307/307 [04:43<00:00,  1.08it/s]









100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
  0%|          | 0/307 [00:00<?, ?it/s]










































































































































100%|██████████| 307/307 [04:47<00:00,  1.07it/s]










100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
Epoch: 45 | Train Loss: 1.4221147737596245 | Val Loss: 1.7410124319571036 | Val Padded_cmAP : 0.8917971396046672










































































































































100%|██████████| 307/307 [04:46<00:00,  1.07it/s]









100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]










































































































































100%|██████████| 307/307 [04:49<00:00,  1.06it/s]









 93%|█████████▎| 25/27 [00:20<00:01,  1.40it/s]
100%|██████████| 27/27 [00:21<00:00,  1.25it/s]










































































































































100%|██████████| 307/307 [04:51<00:00,  1.05it/s]










100%|██████████| 27/27 [00:21<00:00,  1.25it/s]
Epoch: 48 | Train Loss: 1.3930556948876147 | Val Loss: 1.6009017052473846 | Val Padded_cmAP : 0.8922150228920938













































































































































100%|██████████| 307/307 [04:55<00:00,  1.04it/s]









100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/307 [00:00<?, ?it/s]


















































































































































100%|██████████| 307/307 [05:04<00:00,  1.01it/s]









100%|██████████| 27/27 [00:21<00:00,  1.24it/s]
  0%|          | 0/27 [00:00<?, ?it/s]
Epoch: 50 | Train Loss: 1.3794222208110052 | Val Loss: 1.6158417794439528 | Val Padded_cmAP : 0.8933598930424326
# Loading best model
  4%|▎         | 1/27 [00:02<00:53,  2.04s/it]
 11%|█         | 3/27 [00:03<00:25,  1.06s/it]
 22%|██▏       | 6/27 [00:05<00:16,  1.25it/s]
 33%|███▎      | 9/27 [00:07<00:13,  1.36it/s]
 44%|████▍     | 12/27 [00:10<00:10,  1.37it/s]
 56%|█████▌    | 15/27 [00:12<00:08,  1.40it/s]
 63%|██████▎   | 17/27 [00:13<00:07,  1.39it/s]
 74%|███████▍  | 20/27 [00:15<00:05,  1.39it/s]
 85%|████████▌ | 23/27 [00:17<00:02,  1.41it/s]
 96%|█████████▋| 26/27 [00:20<00:00,  1.41it/s]
wandb :   2%|▏         | 14/647 [00:00<00:34, 18.32it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :   2%|▏         | 14/647 [00:00<00:34, 18.32it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
>>> FOLD 5 Primary_Padded_cmAP = 0.893
wandb :   8%|▊         | 52/647 [00:02<00:29, 19.94it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  13%|█▎        | 85/647 [00:04<00:26, 20.94it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  19%|█▉        | 125/647 [00:07<00:33, 15.37it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  25%|██▌       | 163/647 [00:08<00:22, 21.78it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  31%|███       | 200/647 [00:10<00:30, 14.66it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  37%|███▋      | 242/647 [00:13<00:19, 20.75it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  42%|████▏     | 270/647 [00:14<00:24, 15.30it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  47%|████▋     | 305/647 [00:17<00:20, 16.90it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  52%|█████▏    | 339/647 [00:19<00:22, 13.51it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  58%|█████▊    | 377/647 [00:20<00:13, 19.49it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  63%|██████▎   | 406/647 [00:22<00:14, 16.80it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  69%|██████▉   | 449/647 [00:25<00:08, 24.59it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  75%|███████▍  | 485/647 [00:26<00:07, 21.08it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  81%|████████  | 522/647 [00:29<00:05, 21.52it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  86%|████████▌ | 557/647 [00:31<00:05, 16.58it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  91%|█████████ | 590/647 [00:33<00:03, 14.37it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  96%|█████████▋| 624/647 [00:35<00:01, 20.00it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb : 100%|██████████| 647/647 [00:36<00:00, 17.95it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb : 100%|██████████| 647/647 [00:36<00:00, 17.95it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`