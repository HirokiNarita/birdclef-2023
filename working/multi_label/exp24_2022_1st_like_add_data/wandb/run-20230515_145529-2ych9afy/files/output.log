load pre-trained model :  /kaggle/working/WSL/exp10_softmax_model/fold-0.pth
_IncompatibleKeys(missing_keys=['bn0.weight', 'bn0.bias', 'bn0.running_mean', 'bn0.running_var', 'fc1.weight', 'fc1.bias', 'global_pool.p', 'head.weight', 'head.bias'], unexpected_keys=[])
#########################
#### Training
#### Fold: 1 | Image Size: (128, 1001) | Model: tf_efficientnet_b1_ns | Batch Size: 64 | Scheduler: cos
#### Num Train: 19,627 | Num Valid: 3,381


































































































































100%|██████████| 307/307 [04:27<00:00,  1.15it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
Epoch: 1 | Train Loss: 17.97157416048578 | Val Loss: 6.093927259798403 | Val Padded_cmAP : 0.48143099968450276




































































































































100%|██████████| 307/307 [04:32<00:00,  1.13it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
Epoch: 2 | Train Loss: 6.095828522300099 | Val Loss: 4.530599973819874 | Val Padded_cmAP : 0.5848887022714355






































































































































100%|██████████| 307/307 [04:40<00:00,  1.09it/s]










100%|██████████| 27/27 [00:23<00:00,  1.66it/s]
100%|██████████| 27/27 [00:23<00:00,  1.16it/s]






























































































































100%|██████████| 307/307 [04:23<00:00,  1.17it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
Epoch: 4 | Train Loss: 3.848227706716581 | Val Loss: 2.38423603993875 | Val Padded_cmAP : 0.8193686918871866


































































































































100%|██████████| 307/307 [04:29<00:00,  1.14it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]


































































































































100%|██████████| 307/307 [04:27<00:00,  1.15it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]




































































































































100%|██████████| 307/307 [04:32<00:00,  1.13it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
Epoch: 7 | Train Loss: 2.8757303242574688 | Val Loss: 2.0276048956093966 | Val Padded_cmAP : 0.8571737217595723

































































































































100%|██████████| 307/307 [04:26<00:00,  1.15it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
Epoch: 8 | Train Loss: 2.718094291826801 | Val Loss: 1.9460895260175068 | Val Padded_cmAP : 0.8638104746761238



































































































































100%|██████████| 307/307 [04:29<00:00,  1.14it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]



































































































































100%|██████████| 307/307 [04:27<00:00,  1.15it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]




































































































































100%|██████████| 307/307 [04:30<00:00,  1.14it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]


































































































































100%|██████████| 307/307 [04:30<00:00,  1.13it/s]









100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]




































































































































100%|██████████| 307/307 [04:29<00:00,  1.14it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]



































































































































100%|██████████| 307/307 [04:30<00:00,  1.13it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]





































































































































100%|██████████| 307/307 [04:32<00:00,  1.13it/s]










 93%|█████████▎| 25/27 [00:22<00:01,  1.38it/s]
100%|██████████| 27/27 [00:23<00:00,  1.15it/s]


































































































































100%|██████████| 307/307 [04:29<00:00,  1.14it/s]










 96%|█████████▋| 26/27 [00:22<00:00,  1.38it/s]
100%|██████████| 27/27 [00:23<00:00,  1.16it/s]

































































































































100%|██████████| 307/307 [04:29<00:00,  1.14it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
Epoch: 17 | Train Loss: 2.063140564710387 | Val Loss: 1.792037961659608 | Val Padded_cmAP : 0.8811363972189991


































































































































100%|██████████| 307/307 [04:28<00:00,  1.14it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
Epoch: 18 | Train Loss: 1.9986754453919997 | Val Loss: 1.8667826983663771 | Val Padded_cmAP : 0.8835979067592753






































































































































100%|██████████| 307/307 [04:33<00:00,  1.12it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
Epoch: 19 | Train Loss: 1.9644572164026068 | Val Loss: 1.762424921547925 | Val Padded_cmAP : 0.8857164435633846



































































































































100%|██████████| 307/307 [04:31<00:00,  1.13it/s]










 93%|█████████▎| 25/27 [00:22<00:01,  1.39it/s]
100%|██████████| 27/27 [00:23<00:00,  1.16it/s]


































































































































100%|██████████| 307/307 [04:25<00:00,  1.15it/s]









100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]

































































































































100%|██████████| 307/307 [04:29<00:00,  1.14it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
Epoch: 22 | Train Loss: 1.897562783005183 | Val Loss: 1.7346894520300407 | Val Padded_cmAP : 0.8859298318970245





































































































































100%|██████████| 307/307 [04:34<00:00,  1.12it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
Epoch: 23 | Train Loss: 1.823533507434087 | Val Loss: 1.7001868861692924 | Val Padded_cmAP : 0.8889053913071595

































































































































100%|██████████| 307/307 [04:26<00:00,  1.15it/s]









100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]




































































































































100%|██████████| 307/307 [04:31<00:00,  1.13it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]


































































































































100%|██████████| 307/307 [04:27<00:00,  1.15it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
Epoch: 26 | Train Loss: 1.7273849971131316 | Val Loss: 1.8499680470537256 | Val Padded_cmAP : 0.8844935332131394
































































































































100%|██████████| 307/307 [04:23<00:00,  1.16it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]

































































































































100%|██████████| 307/307 [04:26<00:00,  1.15it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]





























































































































100%|██████████| 307/307 [04:16<00:00,  1.20it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]































































































































100%|██████████| 307/307 [04:23<00:00,  1.17it/s]









 93%|█████████▎| 25/27 [00:22<00:01,  1.38it/s]
100%|██████████| 27/27 [00:23<00:00,  1.15it/s]




























































































































100%|██████████| 307/307 [04:16<00:00,  1.20it/s]










 93%|█████████▎| 25/27 [00:22<00:01,  1.38it/s]
100%|██████████| 27/27 [00:23<00:00,  1.15it/s]





























































































































100%|██████████| 307/307 [04:18<00:00,  1.19it/s]









100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]































































































































100%|██████████| 307/307 [04:22<00:00,  1.17it/s]









100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]































































































































100%|██████████| 307/307 [04:24<00:00,  1.16it/s]









100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]






























































































































100%|██████████| 307/307 [04:20<00:00,  1.18it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
Epoch: 35 | Train Loss: 1.5243497799584453 | Val Loss: 1.696797834502326 | Val Padded_cmAP : 0.89316838372296































































































































100%|██████████| 307/307 [04:26<00:00,  1.15it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
Epoch: 36 | Train Loss: 1.5234394795731536 | Val Loss: 1.7778115647810477 | Val Padded_cmAP : 0.8936116989668202


































































































































100%|██████████| 307/307 [04:26<00:00,  1.15it/s]










100%|██████████| 27/27 [00:23<00:00,  1.65it/s]
100%|██████████| 27/27 [00:23<00:00,  1.15it/s]






























































































































100%|██████████| 307/307 [04:19<00:00,  1.18it/s]










100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]





























































































































100%|██████████| 307/307 [04:18<00:00,  1.19it/s]









100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]





























































































































100%|██████████| 307/307 [04:16<00:00,  1.20it/s]









100%|██████████| 27/27 [00:23<00:00,  1.16it/s]
  0%|          | 0/307 [00:00<?, ?it/s]


























































































































100%|██████████| 307/307 [04:11<00:00,  1.22it/s]









100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]






























































































































100%|██████████| 307/307 [04:20<00:00,  1.18it/s]









100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]





























































































































100%|██████████| 307/307 [04:17<00:00,  1.19it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]





























































































































100%|██████████| 307/307 [04:15<00:00,  1.20it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]


































































































































100%|██████████| 307/307 [04:25<00:00,  1.16it/s]









100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
  0%|          | 0/307 [00:00<?, ?it/s]






























































































































100%|██████████| 307/307 [04:19<00:00,  1.18it/s]










 96%|█████████▋| 26/27 [00:22<00:00,  1.38it/s]
100%|██████████| 27/27 [00:23<00:00,  1.15it/s]


























































































































100%|██████████| 307/307 [04:12<00:00,  1.22it/s]









 93%|█████████▎| 25/27 [00:22<00:01,  1.38it/s]
100%|██████████| 27/27 [00:23<00:00,  1.16it/s]




























































































































100%|██████████| 307/307 [04:15<00:00,  1.20it/s]










 93%|█████████▎| 25/27 [00:22<00:01,  1.38it/s]
100%|██████████| 27/27 [00:23<00:00,  1.15it/s]



























































































































100%|██████████| 307/307 [04:15<00:00,  1.20it/s]









 93%|█████████▎| 25/27 [00:22<00:01,  1.38it/s]
100%|██████████| 27/27 [00:23<00:00,  1.16it/s]


























































































































100%|██████████| 307/307 [04:11<00:00,  1.22it/s]










100%|██████████| 27/27 [00:23<00:00,  1.15it/s]
Epoch: 50 | Train Loss: 1.3841059883565001 | Val Loss: 1.5781019076153084 | Val Padded_cmAP : 0.8984392417092841
# Loading best model
# Infering OOF
  4%|▎         | 1/27 [00:03<01:20,  3.11s/it]
 15%|█▍        | 4/27 [00:05<00:24,  1.05s/it]
 22%|██▏       | 6/27 [00:06<00:18,  1.14it/s]
 33%|███▎      | 9/27 [00:09<00:14,  1.28it/s]
 44%|████▍     | 12/27 [00:11<00:11,  1.32it/s]
 56%|█████▌    | 15/27 [00:13<00:08,  1.35it/s]
 63%|██████▎   | 17/27 [00:14<00:07,  1.35it/s]
 74%|███████▍  | 20/27 [00:17<00:05,  1.35it/s]
 85%|████████▌ | 23/27 [00:19<00:02,  1.37it/s]
 96%|█████████▋| 26/27 [00:21<00:00,  1.38it/s]
 96%|█████████▋| 26/27 [00:21<00:00,  1.38it/s]
>>> FOLD 1 Primary_Padded_cmAP = 0.898
wandb :   0%|          | 0/659 [00:00<?, ?it/s]andas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :   5%|▌         | 33/659 [00:02<00:27, 22.42it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  10%|█         | 67/659 [00:04<00:40, 14.78it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  14%|█▍        | 91/659 [00:06<00:42, 13.51it/s]ata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  19%|█▉        | 124/659 [00:08<00:37, 14.39it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  25%|██▍       | 164/659 [00:10<00:21, 23.00it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  29%|██▉       | 194/659 [00:12<00:47,  9.85it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  35%|███▌      | 232/659 [00:14<00:18, 22.64it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  41%|████      | 268/659 [00:16<00:19, 20.42it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  45%|████▍     | 296/659 [00:20<00:27, 13.24it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  50%|████▉     | 328/659 [00:22<00:17, 19.31it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  55%|█████▍    | 360/659 [00:23<00:08, 33.28it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  59%|█████▉    | 388/659 [00:26<00:19, 13.60it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  66%|██████▌   | 433/659 [00:28<00:11, 20.37it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  72%|███████▏  | 476/659 [00:30<00:09, 20.16it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  78%|███████▊  | 512/659 [00:32<00:07, 20.53it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  83%|████████▎ | 550/659 [00:34<00:05, 20.91it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  87%|████████▋ | 574/659 [00:36<00:05, 15.74it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  92%|█████████▏| 608/659 [00:38<00:02, 17.28it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb :  98%|█████████▊| 646/659 [00:40<00:00, 20.17it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb : 100%|██████████| 659/659 [00:40<00:00, 16.08it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`
wandb : 100%|██████████| 659/659 [00:40<00:00, 16.08it/s]ta.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead.  To get a de-fragmented frame, use `newframe = frame.copy()`