
  0%|          | 0/613 [00:00<?, ?it/s]
#########################
#### Training
#### Fold: 1 | Image Size: (224, 313) | Model: tf_efficientnet_b1_ns | Batch Size: 128 | Scheduler: cos
#### Num Train: 78,407 | Num Valid: 3,216
tensor([[[-25.1985, -13.9102, -21.5668,  ..., -21.8088,  -7.0807, -28.8592],
         [-23.8068, -12.5185, -20.1752,  ..., -20.4172,  -5.6891, -27.4675],
         [-17.4018,  -8.1160, -18.2217,  ..., -14.7015,  -4.8893, -16.8549],
         ...,
         [  2.6409,   4.8338,   3.0454,  ...,   3.9799,   3.5260,   3.0197],
         [  3.7906,   3.3605,   2.3204,  ...,   0.3445,   2.5491,   3.3976],
         [  3.2153,   4.2869,   3.9142,  ...,   2.6207,   5.1340,   2.9970]]],

  0%|          | 2/613 [00:44<3:09:44, 18.63s/it]
tensor([[[ -4.5457,   2.4575,  -0.5080,  ..., -12.5641,  -6.0957,  -2.8720],
         [ -3.1541,   3.8492,   0.8836,  ..., -11.1725,  -4.7040,  -1.4803],
         [ 10.6771,  -2.5455,   9.0843,  ...,  -4.3300,  -6.5340,   1.5743],
         ...,
         [-15.8529, -18.1237, -20.4778,  ..., -19.8748, -17.4898, -19.9894],
         [-21.3961, -18.7523, -21.0265,  ..., -21.4366, -20.1700, -20.1770],
         [-19.6633, -24.2754, -21.7732,  ..., -26.5082, -25.2407, -26.3822]]],
       device='cuda:0')
tensor([[[ 26.2919,  17.2288,  15.6174,  ...,  24.0632,  20.5679,  24.0212],
         [ 27.6836,  18.6204,  17.0090,  ...,  25.4549,  21.9596,  25.4129],
         [ 15.5167,  18.8919,  17.4590,  ...,   3.0764,   8.2114,   9.9825],
         ...,
         [-29.7082, -31.7406, -33.2395,  ..., -34.1143, -32.5212, -32.7070],
         [-29.5630, -32.9188, -32.8666,  ..., -35.9355, -35.0118, -32.1891],
         [-34.4718, -33.9890, -33.2060,  ..., -36.0420, -35.2682, -33.4543]]],


  1%|          | 4/613 [01:17<3:08:04, 18.53s/it]
tensor([[[-49.9581, -49.9581, -49.9581,  ..., -49.9581, -49.9581, -38.7922],
         [-49.9581, -49.9581, -49.9581,  ..., -49.9581, -49.9581, -37.4005],
         [-49.9581, -49.9581, -49.9581,  ..., -49.9581, -49.9581, -35.5852],
         ...,
         [-27.4725, -19.4703, -19.1336,  ..., -20.8679, -22.2187, -20.6036],
         [-25.7538, -18.9838, -21.5055,  ..., -20.2348, -20.6701, -30.6266],
         [-18.6203, -21.8561, -23.2848,  ..., -30.9739, -22.7428, -30.5166]]],
       device='cuda:0')
tensor([[[ 22.6059,  19.2536,  16.3699,  ...,  23.7331,  18.0359,  18.2956],
         [ 23.9976,  20.6453,  17.7616,  ...,  25.1247,  19.4275,  19.6872],
         [  7.9868,  29.7853,  25.7475,  ...,  32.2718,  17.5403,  14.0156],
         ...,
         [-12.0151,  -7.7369,  -6.8176,  ...,  -8.1469,  -5.2343,  -5.3394],
         [ -8.6144,  -9.9977, -10.9094,  ...,  -7.7721,  -7.5961,  -6.4924],
         [-12.1886, -10.7001, -11.5716,  ..., -10.0352, -14.2352,  -8.7710]]],

  1%|          | 5/613 [01:18<2:04:26, 12.28s/it]
tensor([[[ -4.1139, -16.0969,  -4.8945,  ..., -41.8158, -41.8158, -41.8158],
         [ -2.7222, -14.7053,  -3.5028,  ..., -41.8158, -41.8158, -41.8158],
         [  0.6320,  -6.5851,   1.0673,  ..., -41.8158, -41.8158, -41.8158],
         ...,
         [-14.3268, -20.7703, -19.3238,  ..., -41.8158, -41.8158, -41.8158],
         [-16.5453, -19.7655, -17.8968,  ..., -41.8158, -41.8158, -41.8158],
         [-22.2248, -21.6672, -21.4891,  ..., -41.8158, -41.8158, -41.8158]]],

  1%|          | 6/613 [01:19<1:26:01,  8.50s/it]
tensor([[[-24.2444, -13.0175,  10.0909,  ..., -58.7224, -58.7224, -58.7224],
         [-22.8528, -11.6258,  11.4826,  ..., -58.7224, -58.7224, -58.7224],
         [-15.2406, -24.4884,  12.3010,  ..., -58.7224, -58.7224, -58.7224],
         ...,
         [  5.1159,   7.4288,   4.8047,  ..., -58.7224, -58.7224, -58.7224],
         [  5.5334,   6.6516,   5.3443,  ..., -58.7224, -58.7224, -58.7224],
         [  6.5270,   4.7661,   5.3112,  ..., -58.7224, -58.7224, -58.7224]]],

  1%|          | 7/613 [01:51<2:45:09, 16.35s/it]
tensor([[[-15.5782, -14.7204,  -8.4308,  ...,  -6.0786,  -9.3372,  -0.1745],
         [-14.1865, -13.3287,  -7.0391,  ...,  -4.6869,  -7.9456,   1.2171],
         [-19.6871, -12.5145,  -9.8578,  ...,  -2.7434, -17.2239,   2.4979],
         ...,
         [  5.2853,   7.9469,   4.8447,  ...,   7.6472,   8.6189,   5.5981],
         [  9.8508,   8.3188,   7.4535,  ...,   9.6590,   7.8162,   6.8582],
         [ 10.7662,   9.3006,   9.3166,  ...,   9.2877,   9.9278,   7.1500]]],

  1%|▏         | 9/613 [01:54<1:24:42,  8.42s/it]
tensor([[[-35.3598, -24.7977, -24.1089,  ..., -35.9942, -22.9478, -19.1394],
         [-33.9682, -23.4061, -22.7172,  ..., -34.6025, -21.5562, -17.7477],
         [-25.0505, -22.0262, -15.0674,  ..., -41.0969, -17.6000,  -9.4094],
         ...,
         [-11.6357, -10.2924,  -9.5495,  ...,  -9.6354,  -8.0022, -10.2710],
         [-11.5638, -10.5782,  -9.3714,  ..., -10.3718, -10.6420,  -9.6975],
         [ -9.7239,  -9.9856,  -9.1916,  ..., -10.2051,  -8.8645,  -7.6520]]],
       device='cuda:0')
tensor([[[-24.1518, -23.1103, -20.9435,  ..., -58.8893, -58.8893, -58.8893],
         [-22.7601, -21.7187, -19.5519,  ..., -58.8893, -58.8893, -58.8893],
         [-23.0704, -23.8018, -19.6245,  ..., -58.8893, -58.8893, -58.8893],
         ...,
         [ -5.7435,  -3.1144,  -2.2856,  ..., -58.8893, -58.8893, -58.8893],
         [ -2.4812,  -2.3824,  -3.1833,  ..., -58.8893, -58.8893, -58.8893],
         [ -4.7114,  -2.2741,  -2.1356,  ..., -58.8893, -58.8893, -58.8893]]],

  2%|▏         | 10/613 [02:31<2:32:17, 15.15s/it]
tensor([[[-45.5182, -16.5508, -10.6217,  ..., -22.2388, -17.6880, -18.2561],
         [-45.0792, -15.1592,  -9.2301,  ..., -20.8471, -16.2964, -16.8644],
         [-15.1593,  -4.6253,  -1.3248,  ..., -17.8597,  -7.9426, -12.4234],
         ...,
         [  6.9441,   5.8424,   4.0753,  ...,   3.7084,   4.4047,   2.4089],
         [  2.2612,  -2.2748,   0.9073,  ...,  -0.3987,   4.1509,  -0.2425],
         [-12.9279, -31.3355, -33.3181,  ..., -32.7533, -35.8699, -11.3891]]],
       device='cuda:0')
Exception in thread ChkStopThr:
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/threading.py", line 926, in _bootstrap_inner
    self.run()
  File "/opt/conda/lib/python3.7/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 170, in check_status
    status_response = self._interface.communicate_stop_status()
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 127, in communicate_stop_status
    resp = self._communicate_stop_status(status)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 395, in _communicate_stop_status
    resp = self._communicate(req, local=True)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 231, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
Exception: The wandb backend process has shutdown
Exception in thread NetStatThr:
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/threading.py", line 926, in _bootstrap_inner
    self.run()
  File "/opt/conda/lib/python3.7/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 152, in check_network_status
    status_response = self._interface.communicate_network_status()
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 138, in communicate_network_status
    resp = self._communicate_network_status(status)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 405, in _communicate_network_status
    resp = self._communicate(req, local=True)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 231, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
