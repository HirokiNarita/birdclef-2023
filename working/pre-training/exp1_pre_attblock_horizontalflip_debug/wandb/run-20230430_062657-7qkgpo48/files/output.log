#########################
#### Training
#### Fold: 1 | Image Size: (224, 313) | Model: tf_efficientnet_b1_ns | Batch Size: 128 | Scheduler: cos
#### Num Train: 78,407 | Num Valid: 3,216
  0%|          | 0/613 [00:00<?, ?it/s]
tensor([[[-33.9901, -55.1322, -92.6264,  ..., -92.6264, -92.6264, -92.6264],
         [-32.5984, -53.7405, -92.6264,  ..., -92.6264, -92.6264, -92.6264],
         [-30.8212, -51.9634, -92.6264,  ..., -92.6264, -92.6264, -92.6264],
         ...,
         [-13.6422, -34.7858, -92.6264,  ..., -92.6264, -92.6264, -92.6264],
         [-13.0291, -34.1730, -92.6264,  ..., -92.6264, -92.6264, -92.6264],
         [-12.6264, -33.7704, -92.6264,  ..., -92.6264, -92.6264, -92.6264]]],
       device='cuda:0')
tensor([[[-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],
         ...,
         [-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],

  0%|          | 1/613 [00:08<1:29:33,  8.78s/it]
tensor([[[ -58.4238,  -79.5666, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -57.0322,  -78.1749, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -55.2546,  -76.3974, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         ...,
         [ -67.8117,  -88.9150, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -65.2197,  -86.3461, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -63.8143,  -84.9486, -100.0000,  ..., -100.0000, -100.0000,

  0%|          | 2/613 [00:10<44:16,  4.35s/it]
tensor([[[-35.2713, -56.4112, -98.5473,  ..., -98.5473, -98.5473, -98.5473],
         [-33.8796, -55.0195, -98.5473,  ..., -98.5473, -98.5473, -98.5473],
         [-32.1037, -53.2436, -98.5473,  ..., -98.5473, -98.5473, -98.5473],
         ...,
         [-19.9980, -41.1403, -98.5473,  ..., -98.5473, -98.5473, -98.5473],
         [-19.2854, -40.4286, -98.5473,  ..., -98.5473, -98.5473, -98.5473],
         [-18.8324, -39.9760, -98.5473,  ..., -98.5473, -98.5473, -98.5473]]],
       device='cuda:0')
tensor([[[-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],
         ...,
         [-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],


  1%|          | 5/613 [00:14<19:51,  1.96s/it]
tensor([[[-30.1701, -51.3133, -95.3437,  ..., -95.3437, -95.3437, -95.3437],
         [-28.7785, -49.9216, -95.3437,  ..., -95.3437, -95.3437, -95.3437],
         [-27.0007, -48.1438, -95.3437,  ..., -95.3437, -95.3437, -95.3437],
         ...,
         [-27.5751, -48.6799, -95.3437,  ..., -95.3437, -95.3437, -95.3437],
         [-32.4360, -53.5204, -95.3437,  ..., -95.3437, -95.3437, -95.3437],
         [-38.5564, -59.6522, -95.3437,  ..., -95.3437, -95.3437, -95.3437]]],
       device='cuda:0')
tensor([[[-46.3361, -67.3953, -84.7468,  ..., -84.7468, -84.7468, -84.7468],
         [-44.9444, -66.0037, -84.7468,  ..., -84.7468, -84.7468, -84.7468],
         [-43.2150, -64.2718, -84.7468,  ..., -84.7468, -84.7468, -84.7468],
         ...,
         [-11.1635, -32.3047, -84.7468,  ..., -84.7468, -84.7468, -84.7468],
         [-10.3332, -31.4756, -84.7468,  ..., -84.7468, -84.7468, -84.7468],
         [ -9.8122, -30.9552, -84.7468,  ..., -84.7468, -84.7468, -84.7468]]],
       device='cuda:0')
tensor([[[-32.2824, -53.4290, -95.9258,  ..., -95.9258, -95.9258, -95.9258],
         [-30.8908, -52.0374, -95.9258,  ..., -95.9258, -95.9258, -95.9258],
         [-29.1110, -50.2576, -95.9258,  ..., -95.9258, -95.9258, -95.9258],
         ...,
         [-16.7632, -37.9073, -95.9258,  ..., -95.9258, -95.9258, -95.9258],
         [-16.2573, -37.4017, -95.9258,  ..., -95.9258, -95.9258, -95.9258],
         [-15.9258, -37.0705, -95.9258,  ..., -95.9258, -95.9258, -95.9258]]],

  1%|          | 7/613 [00:16<16:34,  1.64s/it]
tensor([[[ -40.6013,  -61.7383, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -39.2096,  -60.3466, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -37.4353,  -58.5724, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         ...,
         [ -49.0912,  -69.8368, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -42.7725,  -63.8461, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -40.0198,  -61.1385, -100.0000,  ..., -100.0000, -100.0000,

  1%|▏         | 8/613 [00:18<17:13,  1.71s/it]
tensor([[[-16.5245, -37.6696, -90.2807,  ..., -90.2807, -90.2807, -90.2807],
         [-15.1328, -36.2779, -90.2807,  ..., -90.2807, -90.2807, -90.2807],
         [-13.3540, -34.4991, -90.2807,  ..., -90.2807, -90.2807, -90.2807],
         ...,
         [-18.8145, -39.9620, -90.2807,  ..., -90.2807, -90.2807, -90.2807],
         [-19.2660, -40.4147, -90.2807,  ..., -90.2807, -90.2807, -90.2807],
         [-19.5550, -40.7046, -90.2807,  ..., -90.2807, -90.2807, -90.2807]]],
       device='cuda:0')
tensor([[[-18.5765, -39.7201, -84.7995,  ..., -84.7995, -84.7995, -84.7995],
         [-17.1849, -38.3284, -84.7995,  ..., -84.7995, -84.7995, -84.7995],
         [-15.4069, -36.5504, -84.7995,  ..., -84.7995, -84.7995, -84.7995],
         ...,
         [-20.2231, -41.2818, -84.7995,  ..., -84.7995, -84.7995, -84.7995],
         [-16.8259, -37.9427, -84.7995,  ..., -84.7995, -84.7995, -84.7995],
         [-15.1461, -36.2774, -84.7995,  ..., -84.7995, -84.7995, -84.7995]]],


  2%|▏         | 12/613 [00:23<12:46,  1.28s/it]
tensor([[[-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],
         ...,
         [-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.]]], device='cuda:0')
tensor([[[-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],
         ...,
         [-100., -100., -100.,  ..., -100., -100., -100.],
         [-100., -100., -100.,  ..., -100., -100., -100.],


  2%|▏         | 14/613 [00:26<16:10,  1.62s/it]
tensor([[[-46.7554, -67.7673, -86.8200,  ..., -86.8200, -86.8200, -86.8200],
         [-45.3637, -66.3757, -86.8200,  ..., -86.8200, -86.8200, -86.8200],
         [-43.6617, -64.6677, -86.8200,  ..., -86.8200, -86.8200, -86.8200],
         ...,
         [ -8.2251, -29.3698, -86.8200,  ..., -86.8200, -86.8200, -86.8200],
         [ -7.8399, -28.9850, -86.8200,  ..., -86.8200, -86.8200, -86.8200],
         [ -7.5855, -28.7309, -86.8200,  ..., -86.8200, -86.8200, -86.8200]]],

  2%|▏         | 14/613 [00:28<20:06,  2.01s/it]
tensor([[[ -86.0173, -100.0000, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -84.6257, -100.0000, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -82.8457, -100.0000, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         ...,
         [ -86.7625, -100.0000, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -82.7197, -100.0000, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000],
         [ -80.7485, -100.0000, -100.0000,  ..., -100.0000, -100.0000,
          -100.0000]]], device='cuda:0')
Process wandb_internal:
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/multiprocessing/process.py", line 297, in _bootstrap
    self.run()
  File "/opt/conda/lib/python3.7/multiprocessing/process.py", line 99, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/internal/internal.py", line 160, in wandb_internal
    thread.join()
  File "/opt/conda/lib/python3.7/threading.py", line 1044, in join
    self._wait_for_tstate_lock()
  File "/opt/conda/lib/python3.7/threading.py", line 1060, in _wait_for_tstate_lock
    elif lock.acquire(block, timeout):
KeyboardInterrupt
Exception in thread ChkStopThr:
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/threading.py", line 926, in _bootstrap_inner
    self.run()
  File "/opt/conda/lib/python3.7/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 170, in check_status
    status_response = self._interface.communicate_stop_status()
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 127, in communicate_stop_status
    resp = self._communicate_stop_status(status)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 395, in _communicate_stop_status
    resp = self._communicate(req, local=True)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 231, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
Exception: The wandb backend process has shutdown
Exception in thread NetStatThr:
Traceback (most recent call last):
  File "/opt/conda/lib/python3.7/threading.py", line 926, in _bootstrap_inner
    self.run()
  File "/opt/conda/lib/python3.7/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/wandb_run.py", line 152, in check_network_status
    status_response = self._interface.communicate_network_status()
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface.py", line 138, in communicate_network_status
    resp = self._communicate_network_status(status)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 405, in _communicate_network_status
    resp = self._communicate(req, local=True)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 226, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/opt/conda/lib/python3.7/site-packages/wandb/sdk/interface/interface_shared.py", line 231, in _communicate_async
    raise Exception("The wandb backend process has shutdown")
